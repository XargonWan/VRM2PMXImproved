name: Build and Release Electron App (Windows and Linux)

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Build Electron App (with integrated Unity)
        run: node electron/build.js

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: electron-build-${{ matrix.os }}
          path: dist/

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux build artifact
        uses: actions/download-artifact@v3
        with:
          name: electron-build-ubuntu-latest
          path: build_artifacts/linux

      - name: Download Windows build artifact
        uses: actions/download-artifact@v3
        with:
          name: electron-build-windows-latest
          path: build_artifacts/windows

      - name: Identify Linux artifact file
        id: find_linux
        run: |
          linux_artifact=$(find build_artifacts/linux -type f | head -n 1)
          echo "linux_artifact=${linux_artifact}" >> $GITHUB_OUTPUT

      - name: Identify Windows artifact file
        id: find_windows
        run: |
          windows_artifact=$(find build_artifacts/windows -type f | head -n 1)
          echo "windows_artifact=${windows_artifact}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_linux.outputs.linux_artifact }}
          asset_name: linux-build.AppImage
          asset_content_type: application/octet-stream

      - name: Upload Windows artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_windows.outputs.windows_artifact }}
          asset_name: windows-build.zip
          asset_content_type: application/zip